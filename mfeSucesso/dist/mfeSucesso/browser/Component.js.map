{
  "version": 3,
  "sources": ["../../../src/app/components/pages/user/user-list.ts", "../../../src/app/components/pages/user/user-list.html", "../../../src/app/services/user/user-service.ts", "../../../src/environments/environments.ts", "../../../src/app/services/user/user-config.ts"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { NgFor } from '@angular/common';\r\nimport { User } from '../../../domain/user/user.model';\r\nimport { UserService } from '../../../services/user/user-service';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  imports: [NgFor],\r\n  templateUrl: './user-list.html',\r\n  styleUrl: './user-list.scss'\r\n})\r\nexport class UserList implements OnInit {\r\n\r\n  constructor(private userService: UserService) { }\r\n  public users: User[] = [];\r\n\r\n  public getUserList() {\r\n    this.userService.getUsers()\r\n    .subscribe(\r\n      response => this.users = response\r\n    )\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.getUserList();\r\n  }\r\n\r\n\r\n}\r\n", "<div class=\"card\">\r\n    <h1 class=\"sub-title\">Consulta de Usuários</h1>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th width=\"20%\">Código</th>\r\n                <th width=\"40%\">Nome</th>\r\n                <th width=\"40%\">Email</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let user of users\">\r\n                <td>{{user.id}}</td>\r\n                <td>{{user.name}}</td>\r\n                <td>{{user.email}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n", "import { Injectable } from '@angular/core';\r\nimport { userURIs } from \"../user/user-config\";\r\nimport { catchError, Observable, throwError } from 'rxjs';\r\nimport { User } from '../../domain/user/user.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private httpClient: HttpClient, private toastr: ToastrService) { }\r\n\r\n  public getUsers(): Observable<User[]> {\r\n    return this.httpClient.get<User[]>(userURIs.userList).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  public handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('Houve um erro:', error.error.message);\r\n    } else {\r\n      console.error(`status: ${error.status}, ` + `descrição: ${error.error}`);\r\n    }\r\n    return throwError(() => new Error('Algum erro aconteceu, tente novamente mais tarde!'));\r\n  }\r\n}\r\n", "export const environment = {\r\n    production: false,\r\n    jsonserver_host: \"http://localhost:3000\"\r\n}", "import { environment } from \"../../../environments/environments\";\r\n\r\nexport const userURIs = {\r\n    userList: `${environment.jsonserver_host}/users`\r\n}"],
  "mappings": "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",
  "names": []
}
